---
const { t } = Astro.props;
---

<section
  class="container-custom relative pt-28 pb-20 overflow-hidden hero-section min-h-[calc(100vh-90px)]"
>
  <div class="container-custom relative z-10">
    <div class="grid md:grid-cols-2 gap-12 items-center">
      <div class="slide-up" transition:animate="slide">
        <h1 class="mb-6 text-secondary-900 dark:text-white leading-tight">
          <span class="text-accent-500">{t.hero.highlight}</span><br />
          <span
            class="text-primary-500 dark:text-primary-400"
            id="typewriter-text"
            data-typed-text={t.hero.typewriter}></span>
        </h1>

        <p class="text-xl text-gray-600 dark:text-secondary-300 mb-8 max-w-lg">
          {t.hero.description}
        </p>

        <div class="flex flex-wrap gap-4">
          <a href={t.hero.ctaUrl} class="btn-primary">
            {t.hero.ctaText}
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 ml-2"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z"
                clip-rule="evenodd"></path>
            </svg>
          </a>
        </div>
      </div>

      <div class="relative fade-in">
        <div class="relative w-full mx-auto z-10">
          <img
            src="/biowel.png"
            alt="Sistema FOCA"
            class="min-h-[350px] drop-shadow-xl animate-float"
          />
        </div>
      </div>
    </div>
  </div>

  <div
    class="mt-28 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-2xl p-8 relative overflow-hidden"
  >
    <div
      class="absolute inset-0 bg-gradient-to-r from-primary-600/30 to-secondary-600/30 backdrop-blur-sm"
    >
    </div>
    <div
      class="relative z-10 text-center md:text-left md:flex items-center justify-between"
    >
      <div class="text-xl md:text-3xl font-bold text-white text-center">
        {t.hero.banner}
      </div>
    </div>
  </div>
</section>

<script is:inline>
  const init = () => {
    const target = document.getElementById("typewriter-text");
    if (!target || target.dataset.animated === "true") return;

    const text = target.dataset.typedText;
    if (!text) return;

    async function typeText() {
      for (let i = 0; i < text.length; i++) {
        target.textContent += text.charAt(i);
        await new Promise((r) => setTimeout(r, 50));
      }
    }

    async function deleteText() {
      for (let i = text.length; i >= 0; i--) {
        target.textContent = text.substring(0, i);
        await new Promise((r) => setTimeout(r, 30));
      }
    }

    async function startTypewriterLoop() {
      while (true) {
        target.textContent = "";
        await typeText();
        await new Promise((r) => setTimeout(r, 8000));
        await deleteText();
        await new Promise((r) => setTimeout(r, 500));
      }
    }

    target.dataset.animated = "true";
    startTypewriterLoop();
  };

  if (document.readyState === "complete") init();
  else window.addEventListener("DOMContentLoaded", init);

  document.addEventListener("astro:after-swap", init);
</script>
